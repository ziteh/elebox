# Gitlint: Linting for your git commit messages
# $ pre-commit install --hook-type commit-msg
# https://jorisroovers.com/gitlint/latest/rules/

[general]
# Ignore rules, reference them by id or name (comma-separated)
ignore=body-is-missing

# Enable specific community contributed rules
contrib=contrib-title-conventional-commits


### Configuring rules ###

[title-max-length]
line-length=72

[title-min-length]
min-length=5

[contrib-title-conventional-commits]
types=fix,feat,chore,docs,style,refactor,perf,test
# fix: patches a bug (this correlates with PATCH in Semantic Versioning)
# feat: introduces a new feature (this correlates with MINOR in Semantic Versioning)
# refactor: a code change that neither fixes a bug nor adds a feature
# style: changes that do not affect the meaning of the code (white-space, formatting, missing semi-colons, etc)
# perf: performance improvements
# test: adding missing tests or correcting existing tests
# chore: changes that do not relate to a fix or feature and don't modify src or test files (for example updating dependencies)
# docs: documentation only changes
